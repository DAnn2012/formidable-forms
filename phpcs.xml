<?xml version="1.0"?>
<ruleset name="Formidable Forms">
	<description>Formidable Forms rules for PHP_CodeSniffer</description>

	<exclude-pattern>vendor/*</exclude-pattern>
	<exclude-pattern>node_modules/*</exclude-pattern>
	<exclude-pattern>deprecated/*</exclude-pattern>
	<exclude-pattern>bin/*</exclude-pattern>
	<exclude-pattern>languages/formidable-js-strings.php</exclude-pattern>
	<exclude-pattern>stubs.php</exclude-pattern>

	<arg name="extensions" value="php,css" />
	<arg value="nsp" />

	<rule ref="WordPress">
		<exclude name="Squiz.Commenting.FunctionCommentThrowTag.Missing" />
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamComment" />
		<exclude name="Squiz.Commenting.FileComment.Missing" />
		<exclude name="Squiz.Commenting.FunctionComment.Missing" />
		<exclude name="Squiz.Commenting.VariableComment.Missing" />
		<exclude name="Squiz.Commenting.ClassComment.Missing" />
		<exclude name="Squiz.Commenting.FunctionComment.MissingParamTag" />
		<exclude name="Squiz.Commenting.InlineComment.InvalidEndChar" />
		<exclude name="Generic.Commenting.DocComment.MissingShort" />

		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />
		<exclude name="WordPress.PHP.YodaConditions" />

		<!-- These rules are new. Work on fixing these. -->
		<exclude name="WordPress.WP.Capabilities.RoleFound" />
		<exclude name="Generic.Files.OneObjectStructurePerFile.MultipleFound" />
		<exclude name="Universal.ControlStructures.DisallowLonelyIf.Found" />
		<exclude name="Generic.CodeAnalysis.RequireExplicitBooleanOperatorPrecedence.MissingParentheses" />
	</rule>
	<rule ref="WordPress.WP.I18n">
		<properties>
			<property name="text_domain" type="array">
				<element value="formidable"/>
			</property>
		</properties>
	</rule>
	<rule ref="Squiz.Scope.StaticThisUsage" />

	<rule ref="WordPress.WP.EnqueuedResources.NonEnqueuedStylesheet">
		<exclude-pattern>classes/views/frm-forms/preview/header.php</exclude-pattern>
	</rule>

	<!-- MEDIUM PRIORITY ITEMS TO FIX -->
	<rule ref="Squiz.PHP.EmbeddedPhp.ContentBeforeOpen">
		<exclude-pattern>classes/views/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.PHP.EmbeddedPhp.ContentAfterEnd">
		<exclude-pattern>classes/views/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.WP.GlobalVariablesOverride">
		<exclude-pattern>css/_single_theme.css.php</exclude-pattern>
		<exclude-pattern>classes/views/*</exclude-pattern>
		<exclude-pattern>classes/models/FrmDb.php</exclude-pattern>
		<exclude-pattern>classes/controllers/FrmFormsController.php</exclude-pattern>
		<exclude-pattern>classes/helpers/FrmEntriesListHelper.php</exclude-pattern>
		<exclude-pattern>classes/helpers/FrmFormsListHelper.php</exclude-pattern>
	</rule>

	<!-- Exclude specific rules for unit tests (fix when possible) -->
	<rule ref="WordPress.Security.NonceVerification.Missing">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="PEAR.NamingConventions.ValidClassName.StartWithCapital">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.DB.PreparedSQL">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.Security.EscapeOutput.OutputNotEscaped">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.WP.EnqueuedResources.NonEnqueuedStylesheet">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="WordPress.Security.ValidatedSanitizedInput">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting">
		<exclude-pattern>tests/*</exclude-pattern>
	</rule>

	<!-- These rules likely won't see any changes for compatibility -->
	<rule ref="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid">
		<!-- the getOne and getAll functions all break this rule -->
		<exclude-pattern>classes/models/FrmField.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmForm.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmEntry.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmEntryMeta.php</exclude-pattern>
	</rule>
	<rule ref="WordPress.NamingConventions.ValidVariableName.VariableNotSnakeCase">
		<!-- wpmuBaseTablePrefix breaks this rule -->
		<exclude-pattern>classes/models/FrmField.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmForm.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmDb.php</exclude-pattern>
	</rule>

	<!-- Add some rules from the Slevomat Coding Standard -->
	<rule ref="SlevomatCodingStandard.PHP.UselessParentheses" />

	<!-- Set rules for Cognitive Complexity -->
	<rule ref="SlevomatCodingStandard.Complexity.Cognitive">
		<properties>
			<property name="warningThreshold" value="30" />
			<property name="errorThreshold" value="10" />
		</properties>
	</rule>
	<rule ref="SlevomatCodingStandard.Complexity.Cognitive.ComplexityTooHigh">
		<exclude-pattern>classes/helpers/FrmFormsHelper.php</exclude-pattern>
		<exclude-pattern>classes/helpers/FrmListHelper.php</exclude-pattern>
		<exclude-pattern>classes/helpers/FrmXMLHelper.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmEntryMeta.php</exclude-pattern>
		<exclude-pattern>classes/helpers/FrmCSVExportHelper.php</exclude-pattern>
		<exclude-pattern>classes/helpers/FrmFieldsHelper.php</exclude-pattern>
		<exclude-pattern>classes/controllers/FrmXMLController.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmEntryValidate.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmForm.php</exclude-pattern>
		<exclude-pattern>classes/models/FrmStyle.php</exclude-pattern>
		<exclude-pattern>classes/controllers/FrmFormActionsController.php</exclude-pattern>
		<exclude-pattern>tests/base/FrmUnitTest.php</exclude-pattern>
	</rule>

	<rule ref="WordPressVIPMinimum">
		<exclude name="Generic.PHP.NoSilencedErrors.Forbidden" />
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions.chmod_chmod" />
		<exclude name="WordPressVIPMinimum.Files.IncludingFile.NotAbsolutePath" />
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions.flush_rewrite_rules_flush_rewrite_rules" />
		<exclude name="WordPressVIPMinimum.Performance.RemoteRequestTimeout.timeout_timeout" />
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions.term_exists_term_exists" />
		<exclude name="WordPressVIPMinimum.Variables.ServerVariables.UserControlledHeaders" />
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions.wp_is_mobile_wp_is_mobile" />
		<exclude name="WordPressVIPMinimum.UserExperience.AdminBarRemoval.HidingDetected" />
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions.file_ops_fputs" />
		<exclude name="WordPressVIPMinimum.Functions.RestrictedFunctions.file_ops_fwrite" />
	</rule>
	<rule ref="WordPress.PHP.DevelopmentFunctions.error_log_error_log">
		<exclude-pattern>FrmTransLiteLog.php</exclude-pattern>
	</rule>
	<rule ref="WordPressVIPMinimum.Functions.RestrictedFunctions.file_ops_unlink">
		<exclude-pattern>test_FrmCSVExportHelper.php</exclude-pattern>
	</rule>
	<rule ref="WordPressVIPMinimum.Security.ExitAfterRedirect.NoExit">
		<exclude-pattern>FrmEntriesController.php</exclude-pattern>
	</rule>
	<rule ref="WordPressVIPMinimum.Functions.RestrictedFunctions.custom_role_add_role">
		<exclude-pattern>FrmUnitTest.php</exclude-pattern>
	</rule>

	<!-- Treat these warnings as errors -->
	<rule ref="Generic.Formatting.MultipleStatementAlignment.NotSameWarning">
		<severity>8</severity>
		<type>error</type>
	</rule>
	<rule ref="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned">
		<severity>8</severity>
		<type>error</type>
	</rule>
</ruleset>