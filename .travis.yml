dist: trusty
language: php

sudo: false

matrix:
  include:
    - php: 7.1
      env: WP_VERSION=master WP_MULTISITE=1 SNIFF=1
    - php: 7.2
      env: WP_VERSION=master WP_MULTISITE=1
    - php: 7.0
      env: WP_VERSION=master SCRIPT_DEBUG=1
    - php: 7.0
      env: WP_VERSION=4.9 COVERAGE=1 PHPUNIT=0
    - php: 5.6
      env: WP_VERSION=4.7
    - php: nightly
      env: WP_VERSION=master
  allow_failures:
    - php: nightly

before_script:
- |
  # Remove Xdebug for a huge performance increase:
  if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
    phpenv config-rm xdebug.ini
  else
    echo "xdebug.ini does not exist"
  fi
- |
  # Install the specified version of PHPUnit depending on the PHP version:
  case "$TRAVIS_PHP_VERSION" in
    7.3|7.2|nightly)
      echo "Using PHPUnit 7.x"
      travis_retry composer require "phpunit/phpunit:^7"
      ;;
    7.1|7.0)
      echo "Using PHPUnit 6.x"
      travis_retry composer require "phpunit/phpunit:^6"
      ;;
    5.6)
      echo "Using PHPUnit 4.x"
      travis_retry composer require "phpunit/phpunit:^4"
      ;;
    *)
      echo "No PHPUnit version handling for PHP version $TRAVIS_PHP_VERSION"
      exit 1
      ;;
  esac
- ./vendor/bin/phpunit --version
- mysql --version
- PLUGIN_SLUG=$(basename $(pwd))
- export WP_DEVELOP_DIR=/tmp/wordpress/
- git clone --depth=50 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
- cd ..
- cp -r "$PLUGIN_SLUG" "/tmp/wordpress/src/wp-content/plugins/formidable"
- cd /tmp/wordpress/
- cp wp-tests-config-sample.php wp-tests-config.php
- sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
- sed -i "s/yourusernamehere/travis/" wp-tests-config.php
- sed -i "s/yourpasswordhere//" wp-tests-config.php
- mysql -u root -e "CREATE DATABASE wordpress_tests;"
- cd "/tmp/wordpress/src/wp-content/plugins/formidable"
- phpenv rehash
# Install JSCS: JavaScript Code Style checker.
# @link http://jscs.info/
- if [[ "$SNIFF" == "1" ]]; then npm install -g jscs; fi
# Install JSHint, a JavaScript Code Quality Tool.
# @link http://jshint.com/docs/
- if [[ "$SNIFF" == "1" ]]; then npm install -g jshint; fi
# Pull in the WP Core jshint rules.
- if [[ "$SNIFF" == "1" ]]; then wget https://develop.svn.wordpress.org/trunk/.jshintrc; fi

script:
- if [[ "$SCRIPT_DUBUG" == "1" ]]; then php -r "define('SCRIPT_DUBUG', true);"; fi
- if [[ "$SCRIPT_DUBUG" == "0" ]]; then php -r "define('SCRIPT_DUBUG', false);"; fi
# Run the theme through JSHint. Turn on in 3.0
- if [[ "$SNIFF" == "1" ]]; then jshint ./js/formidable*; fi
# Run the theme through JavaScript Code Style checker. Turn on in 3.0
- if [[ "$SNIFF" == "1" ]]; then jscs .; fi
- |
  if [ "$PHPUNIT" != "0" ]; then
    ./vendor/bin/phpunit --group=ajax -c phpunit.xml
    ./vendor/bin/phpunit --group=entries -c phpunit.xml
    ./vendor/bin/phpunit --group=styles -c phpunit.xml
    ./vendor/bin/phpunit --exclude-group=ajax,entries,styles -c phpunit.xml
  fi
- if [[ "$COVERAGE" == "1" ]]; then vendor/bin/phpunit --coverage-clover=coverage.xml; fi

after_script:
# upload coverage.xml file to Codecov
- if [[ "$COVERAGE" == "1" ]]; then bash <(curl -s https://codecov.io/bash); fi